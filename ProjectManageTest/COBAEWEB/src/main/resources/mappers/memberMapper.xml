<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
    <!-- 회원가입 -->
    <insert id="register">
    INSERT INTO FL_EMP
    VALUES(
   		 SEQ_EMP_NO.NEXTVAL,
   		 #{orgSeq},
   		 #{empDivCd},
   		 #{empId} || SEQ_EMP_NO.NEXTVAL,
    	 #{empNm},
    	 #{empPwd},
    	 #{empEmail},
    	 #{empPhoneNo},
   		 #{emerNo},
   		 #{empJoinDay},
   		 #{skillLvCd},
   		 #{posCd},
   		 #{statCd},
    	 '등록자사번',
   		 to_char(sysdate, 'yyyy.mm.dd hh24:mi'),
   		 null,
   		 null)
    </insert>

    <!-- 로그인 -->
      <select id="login" statementType="CALLABLE" parameterType="EmpVO" resultType="EmpVO">
        {
            CALL P_LOGIN_DATE(to_char(sysdate,'yyyy.mm.dd hh24:mi'),#{empEmail})
        }
    </select>

    <!-- 아이디 중복 체크 -->
    <select id="idChk" resultType="int">
        SELECT COUNT(*)
        FROM FL_EMP
        WHERE EMP_EMAIL = #{empEmail}
    </select>

    <!-- 비밀번호 변경 -->
    <update id="update_pw" parameterType="EmpVO">
        update FL_EMP set EMP_PWD = #{empPwd} where EMP_EMAIL = #{empEmail}
    </update>

    <select id="getPw" resultType="String">
        SELECT EMP_PWD
        FROM FL_EMP
        WHERE EMP_ID = #{empId}
    </select>
	
	<update id="empEdit">
 	update FL_EMP
	set ORG_SEQ			= #{orgSeq},
		EMP_DIV_CD		= #{empDivCd},
		EMP_NM			= #{empNm},
		EMP_PHONE_NO	= #{empPhoneNo},
		EMP_JOIN_DAY	= #{empJoinDay},
		SKILL_LV_CD		= #{skillLvCd},
		POS_CD			= #{posCd},
		STAT_CD			= #{statCd},
		CHG_ID			= '수정자사번ID',
	    CHG_DT			= to_char(sysdate, 'yyyy.mm.dd hh24:mi')
		where EMP_ID = #{empId}
	</update>
	
    <!--  회원정보 수정 -->
 <!--  	<update id="empEdit">
        MERGE INTO FL_EMP FEMP
        USING FL_EMP_ADMIN FEADM
        ON (FEMP.EMP_NO = FEADM.EMP_NO)
        WHEN MATCHED THEN
            UPDATE
            SET FEMP.EMP_NM       = #{empNm},
                FEMP.EMP_PHONE_NO = #{empPhoneNo},
                FEMP.EMP_EMER_NO  = #{empEmerNo},
                FEMP.PJT_POS_C = #{pjtPosC},
                FEMP.PJT_LV_C  = #{pjtLvC}
            WHERE FEMP.EMP_NO = FEADM.EMP_NO
    </update>-->

    <!--  회원정보 수정 -->
 <!--     <update id="empEdit">
        MERGE INTO FL_EMP FEMP
        USING FL_EMP_ADMIN FEADM
        ON (FEMP.EMP_NO = FEADM.EMP_NO)
        WHEN MATCHED THEN
            UPDATE
            SET FEMP.EMP_NM       = #{empNm},
                FEMP.EMP_PHONE_NO = #{empPhoneNo},
                FEMP.EMP_EMER_NO  = #{empEmerNo},
                FEMP.PJT_POS_C = #{pjtPosC},
                FEMP.PJT_LV_C  = #{pjtLvC}
            WHERE FEMP.EMP_NO = #{empNo}
    </update>-->
    
    <!--  회원정보 수정 -->
<!--     <update id="empEdit">
         MERGE INTO FL_EMP FEMP
        USING DUAL
        ON (FEMP.EMP_NO = #{empNo})
        WHEN MATCHED THEN
            UPDATE
            SET FEMP.EMP_NM       = #{empNm},
                FEMP.EMP_PHONE_NO = #{empPhoneNo},
                FEMP.EMP_EMER_NO  = #{empEmerNo},
                FEMP.PJT_POS_C = #{pjtPosC},
                FEMP.PJT_LV_C  = #{pjtLvC}
    </update>    -->
    
    <!-- 유저정보 전체 호출 -->
    <select id="empShow" parameterType="EmpVO" resultType="EmpVO">
        SELECT EMP_SEQ       as empSeq,
        	   ORG_SEQ		 as orgSeq,
        	   EMP_DIV_CD	 as empDivCd,
               EMP_ID        as empId,
               EMP_NM        as empNm,
               EMP_EMAIL     as empEmail,
               EMP_PHONE_NO  as empPhoneNo,
               EMER_NO       as emerNo,
               EMP_JOIN_DAY  as empJoinDay,
               SKILL_LV_CD   as skillLvCd,
               POS_CD        as posCd,
               STAT_CD		 as statCd,
               REG_ID		 as regId,
               REG_DT		 as regDt,
               CHG_ID		 as chgId,
               CHG_DT		 as chgDt
        FROM FL_EMP
    </select>

    <!--  직원정보 삭제  -->
    <delete id="deleteEmp" >
        DELETE
            FL_EMP
        WHERE
            EMP_ID = #{empId}
    </delete>

    <delete id="deleteEmpAdmin">
        DELETE
            FL_EMP_ADMIN
        WHERE
            NO = #{no}
    </delete>


</mapper>













